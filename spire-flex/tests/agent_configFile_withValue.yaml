suite: "test agent with .agent.configFile \"/etc/spire/agent_goofy\""
templates:
  - "agent-configmap.yaml"
  - "agent-daemonset.yaml"
tests:
  - it: "agent.configFile property is \"agent_goofy\""
    template: "agent-configmap.yaml"
    set:
      trustdomain: "dev.mycorp.com"
      agent.configFile: "/etc/spire/agent_goofy"
    asserts:
      - containsDocument:
          apiVersion: "v1"
          kind: "ConfigMap"
          name: "RELEASE-NAME-agent-config"
          namespace: "NAMESPACE"
      - isNotNull:
          path: $["data"]["agent_goofy"]

  - it: "agent container args contains \"-config /etc/spire/agent_goofy\""
    template: "agent-daemonset.yaml"
    set:
      trustdomain: "dev.mycorp.com"
      agent.configFile: "/etc/spire/agent_goofy"
    asserts:
      - containsDocument:
          apiVersion: "apps/v1"
          kind: "DaemonSet"
          name: "RELEASE-NAME-agent-daemonset"
          namespace: "NAMESPACE"
      - equal:
          path: "spec.template.spec.containers[?(@.name == \"RELEASE-NAME-agent\")].args[0]"
          value: "-config"
      - equal:
          path: "spec.template.spec.containers[?(@.name == \"RELEASE-NAME-agent\")].args[1]"
          value: "/etc/spire/agent_goofy"

  - it: "agent container uses agent configMap mounted volume"
    template: "agent-daemonset.yaml"
    set:
      trustdomain: "dev.mycorp.com"
      agent.configFile: "/etc/spire/agent_goofy"
    asserts:
      - containsDocument:
          apiVersion: "apps/v1"
          kind: "DaemonSet"
          name: "RELEASE-NAME-agent-daemonset"
          namespace: "NAMESPACE"
      - isNotNull:
          path: "spec.template.spec.volumes[?(@.name == \"RELEASE-NAME-agent-config\")]"
      - equal:
          path: "spec.template.spec.volumes[?(@.name == \"RELEASE-NAME-agent-config\")].configMap.name"
          value: "RELEASE-NAME-agent-config"
      - isNotNull:
          path: "spec.template.spec.containers[?(@.name == \"RELEASE-NAME-agent\")].volumeMounts[?(@.name == \"RELEASE-NAME-agent-config\")]"

  - it: "agent container uses configMap mounted volume at \"/etc/spire/\""
    template: "agent-daemonset.yaml"
    set:
      trustdomain: "dev.mycorp.com"
      agent.configFile: "/etc/spire/agent_goofy"
    asserts:
      - containsDocument:
          apiVersion: "apps/v1"
          kind: "DaemonSet"
          name: "RELEASE-NAME-agent-daemonset"
          namespace: "NAMESPACE"
      - equal:
          path: "spec.template.spec.containers[?(@.name == \"RELEASE-NAME-agent\")].volumeMounts[?(@.name == \"RELEASE-NAME-agent-config\")].mountPath"
          value: "/etc/spire/"
      - equal:
          path: "spec.template.spec.containers[?(@.name == \"RELEASE-NAME-agent\")].volumeMounts[?(@.name == \"RELEASE-NAME-agent-config\")].readOnly"
          value: true
